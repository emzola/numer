syntax = "proto3";
option go_package = "/user-service/proto";
package user;

service UserService {
    // User endpoints
    rpc CreateUser(CreateUserRequest) returns (UserResponse);
    rpc GetUser(GetUserRequest) returns (UserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (Empty);

    // Customer endpoints
    rpc CreateCustomer(CreateCustomerRequest) returns (CustomerResponse);
    rpc GetCustomer(GetCustomerRequest) returns (CustomerResponse);
    rpc UpdateCustomer(UpdateCustomerRequest) returns (CustomerResponse);
    rpc DeleteCustomer(DeleteCustomerRequest) returns (Empty);
}

message CreateUserRequest {
    string email = 1;
    string password = 2;
    string role = 3;
}

message GetUserRequest {
    int64 user_id = 1;
}

message UpdateUserRequest {
    int64 user_id = 1;
    string email = 2;
    string password = 3;
    string role = 4;
}

message DeleteUserRequest {
    int64 user_id = 1;
}

message UserResponse {
    int64 id = 1;
    string email = 2;
    string role = 3;
}

// Customer messages
message CreateCustomerRequest {
    int64 user_id = 1;
    string name = 2;
    string email = 3;
    string address = 4;
}

message GetCustomerRequest {
    int64 customer_id = 1;
}

message UpdateCustomerRequest {
    int64 customer_id = 1;
    string name = 2;
    string email = 3;
    string address = 4;
}

message DeleteCustomerRequest {
    int64 customer_id = 1;
}

message CustomerResponse {
    int64 id = 1;
    int64 user_id = 2;
    string name = 3;
    string email = 4;
    string address = 5;
}

message Empty {}
