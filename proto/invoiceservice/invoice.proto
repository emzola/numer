syntax = "proto3";
package invoice;
option go_package = "/invoiceservice/genproto";

// InvoiceService definition
service InvoiceService {
  rpc CreateInvoice(CreateInvoiceRequest) returns (CreateInvoiceResponse);
  rpc GetInvoice(GetInvoiceRequest) returns (GetInvoiceResponse);
  rpc ListInvoices(ListInvoicesRequest) returns (ListInvoicesResponse);
  rpc UpdateInvoiceStatus(UpdateInvoiceStatusRequest) returns (UpdateInvoiceStatusResponse);
  rpc CancelInvoice(CancelInvoiceRequest) returns (CancelInvoiceResponse);
}

// Message for creating an invoice
message CreateInvoiceRequest {
  string user_id = 1;
  string customer_id = 2;
  repeated InvoiceItem items = 3;
  string due_date = 4;
  string billing_currency = 5;
  string note = 6;
  PaymentInformation payment_information = 7;
}

message CreateInvoiceResponse {
  string invoice_id = 1;
  string invoice_number = 2;
}

// Message for retrieving a single invoice
message GetInvoiceRequest {
  string invoice_id = 1;
}

message GetInvoiceResponse {
  Invoice invoice = 1;
}

// Message for listing invoices with pagination
message ListInvoicesRequest {
    string user_id = 1;
    int32 page_size = 2; 
    string page_token = 3;
}
  
message ListInvoicesResponse {
    repeated Invoice invoices = 1;
    string next_page_token = 2;
}
  

// Message for updating invoice status
message UpdateInvoiceStatusRequest {
  string invoice_id = 1;
  InvoiceStatus status = 2;
}

message UpdateInvoiceStatusResponse {
  string message = 1;
}

// Message for canceling an invoice
message CancelInvoiceRequest {
  string invoice_id = 1;
}

message CancelInvoiceResponse {
  string message = 1;
}

// Invoice item details
message InvoiceItem {
  string description = 1;
  int32 quantity = 2;
  double unit_price = 3;
}

// Invoice details
message Invoice {
  string invoice_id = 1;
  string invoice_number = 2; // New
  string user_id = 3;
  string customer_id = 4;
  repeated InvoiceItem items = 5;
  string issue_date = 6;
  string due_date = 7;
  double total_amount = 8;
  string billing_currency = 9;
  InvoiceStatus status = 10;
  string note = 11;
  PaymentInformation payment_information = 12; // New
}

// Payment information details
message PaymentInformation {
  string account_name = 1;
  string account_number = 2;
  string bank_name = 3;
  string routing_number = 4;
}

// Enumeration for invoice status
enum InvoiceStatus {
  PENDING = 0;
  PAID = 1;
  OVERDUE = 2;
  DRAFT = 3;
  CANCELLED = 4; // New
}
